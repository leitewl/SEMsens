for (i in (1:100)){
indicators <- c(indicators , all.results$tau2[[i]][[1]][-1])
entropy <- c(entropy, all.results$tau2[[i]]$entropy)
all.entropy <- c(all.entropy, all.results$tau2[[i]]$all.entropy)
n.class <- c(n.class, all.results$tau2[[i]]$classes)
}
# number of classes identified
n.class
summary(as.factor(n.class))
# entropy
mean(entropy)
sd(entropy)
# Summarize the times of each indicator is selected
n.selected <- NULL
for (j in all.indicators){
selected = sum(indicators == j)
n.selected <- c(n.selected, selected)
}
names(n.selected) <-all.indicators
# summary of informative and non-informative indicators
n.of.non.inf.indictors <- n.selected[non.inf.indicators]
n.of.non.inf.indictors
sum(n.of.non.inf.indictors)/length(n.of.non.inf.indictors)/100
n.of.inf.indictors<- n.selected[inf.indicators]
n.of.inf.indictors
sum(n.of.inf.indictors)/length(n.of.inf.indictors)/100
n.of.all.indictors<- n.selected[all.indicators]
n.of.all.indictors
sum(n.of.all.indictors)/100
library(lavaanPlot)
library(SEMsens)
library(SEMsens)
library(SEMsens)
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
getwd()
setwd("D:\\Dropbox\\Sensitivity Analysis for SEM\\SEMsens")
getwd()
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
#########################################################
#install.packages("spelling")
devtools::spell_check() # spell check
#install.packages("rhub")
devtools::check_rhub() # rhub check
devtools::check_win_devel() # check on win-builder (with `check_win_devel()`)?
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
getwd()
setwd("D:\\Dropbox\\Sensitivity Analysis for SEM\\SEMsens")
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
### Solve problems about re-building vignette on win-builder
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
options(tinytex.verbose = TRUE)
tinytex::tlmgr_update()
options(tinytex.verbose = TRUE)
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
### Solve problems about re-building vignette on win-builder
update.packages(ask = FALSE, checkBuilt = TRUE)
tinytex::tlmgr_update()
tinytex::tlmgr_update()
install.packages('tinytex')
library(tinytex)
tinytex::tlmgr_update()
?tinytex
install.packages('tinytex')
install.packages("tinytex")
library(tinytex)
?tinytex
?tinytex_root
tinytex::tlmgr_update()
tinytex::install_tinytex()
# install.packages('tinytex')
# tinytex::install_tinytex() # install the tinytex package in r, only do once
tinytex::tlmgr_update()
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
getwd()
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
library(SEMsens)
## ---- message=FALSE, warning=FALSE--------------------------------------------
# Load lavaan and SEMsens packages
require(lavaan)
require(SEMsens)
## -----------------------------------------------------------------------------
# Correlation matrix from published data
cormat <- diag(1,29) # start with the diagonal
cormat[lower.tri(cormat)] <- c( # add lower triangle data
.46,.22,.30,-.20,-.30,-.20,-.22,-.33,-.19,-.25,-.63,-.60,-.48,-.17,-.42,-.09,-.36,.09,
.04,-.12,0,-.20,-.20,-.43,-.33,-.49,-.18,-.03,.21,.30,-.15,-.25,-.10,-.20,-.31,-.15,
-.24,-.40,-.37,-.32,-.08,-.24,-.02,-.27,.06,.07,-.08,0,-.10,-.16,-.25,-.18,-.35,-.06,
-.05,.04,-.05,-.09,-.12,-.10,-.01,.03,.02,-.18,-.14,-.09,-.02,-.12,-.05,-.08,.03,.07,
-.08,-.06,-.10,-.07,-.10,-.03,-.11,.04,.03,-.07,-.24,0,-.12,-.50,-.32,-.45,-.38,-.29,
-.31,-.16,-.24,-.16,-.37,.12,.05,-.28,-.13,-.06,-.03,-.16,-.12,-.23,-.08,.06,.29,.31,
.10,.08,-.02,.07,.21,.24,.25,.06,.09,.04,.14,-.02,-.01,.10,.04,.04,.13,.19,.03,.18,
.14,-.04,.38,.41,.23,.13,.22,.36,.35,.35,.09,.14,.11,.14,-.09,-.04,.11,.04,.11,.15,
.30,.17,.33,.12,-.02,.31,.05,.03,.15,.22,.20,.21,-.05,.10,-.05,.03,-.04,-.06,.03,.05,
.03,.07,.24,.19,.23,.13,-.08,.17,.15,.19,.28,.23,.23,.04,.18,.08,.10,-.09,-.06,.07,
.01,.11,.08,.21,.20,.28,.06,-.03,.43,.56,.35,.32,.26,.16,.27,.13,.45,-.04,-.04,.16,
.07,.14,.15,.23,.12,.29,.09,-.07,.67,.24,.26,.27,.15,.21,.13,.25,-.10,-.02,.12,0,.12,
.10,.18,.21,.27,.17,-.06,.36,.32,.31,.11,.29,.16,.40,-.10,-.05,.22,.10,.17,.15,.27,
.23,.33,.17,-.08,.78,.77,.11,.49,.09,.40,-.23,-.14,.19,-.07,.29,.27,.57,.40,.68,.27,0,
.82,.10,.57,.08,.42,-.29,-.10,.13,-.12,.33,.31,.66,.46,.75,.32,.02,.10,.49,.08,.38,
-.31,-.11,.18,-.06,.33,.34,.54,.38,.67,.31,-.08,.14,.52,.20,.22,.31,.42,.39,.01,.01,
.07,.06,.13,-.03,.06,.14,.42,-.29,-.12,.24,-.06,.25,.25,.38,.28,.48,.18,-.01,.16,.16,
.28,.68,.48,.06,.10,.01,.12,.15,-.05,.04,.02,.03,.24,.11,.14,.16,.31,.22,.32,.09,-.01,
.37,.12,.18,-.20,-.15,-.22,-.08,-.23,-.11,.07,.13,.18,-.07,0,-.10,.04,-.06,-.03,.15,
.54,.11,.12,.07,.10,.16,-.01,-.02,-.06,-.01,-.09,-.05,-.10,-.14,.06,.57,.28,.17,.36,
.27,-.05,.32,.21,.36,.18,.05,.42,.68,.26,-.05,.55,.23,.04,.28,-.03,-.07
)
cormat[upper.tri(cormat)] <- t(cormat)[upper.tri(cormat)] # mirror lower to upper
# Standard deviations from published data
sds <- diag(c(1,.38,.73,.65,.58,.78,.75,.55,.59,.54,.45,.74,.85,.80,.57,
.74,.69,.42,.57,.63,.62,.70,1.01,.94,.65,.37,.73,.40,1))
# Create covariance matrix covmat with row and column names
covmat <- sds %*% cormat %*% sds
rownames(covmat) <- colnames(covmat) <- c(
"FACES","Duty","Team","Hours","Absent","Effort","Sick","Quality","Family",
"Community","Personal","Thoughts","SI","QI","Stress","Jobs","Costs",
"Benefits","Joblessness","Moving","Impact","Interference","V1","V2",
"Prepare","Look","Intensity","Resign","Unemployed"
)
## -----------------------------------------------------------------------------
# Original model from Hom and Kinicki (2001)
model <- "JSat =~ FACES + Duty + Team
IC =~ Family + Personal + Community
JAvoid =~ Quality + Absent + Effort + Sick
WC =~ QI + Thoughts + SI
WEU =~ Stress + Benefits + Impact + Jobs
JSearch =~ Prepare + Look + Intensity
CA =~ V1 + V2
Turnover =~ Resign
Resign ~~ 0*Resign
UR =~ Unemployed
Unemployed ~~ 0*Unemployed
JSat ~ IC
JAvoid ~ JSat
WC ~ JAvoid + JSat + IC
WEU ~ WC + JSat + UR
JSearch ~ WEU
CA ~ JSearch
Turnover ~ CA + WC + UR"
## -----------------------------------------------------------------------------
# Sensitivity model
sens.model <- "JSat =~ FACES + Duty + Team
IC =~ Family + Personal + Community
JAvoid =~ Quality + Absent + Effort + Sick
WC =~ QI + Thoughts + SI
WEU =~ Stress + Benefits + Impact + Jobs
JSearch =~ Prepare + Look + Intensity
CA =~ V1 + V2
Turnover =~ Resign
Resign ~~ 0*Resign
UR =~ Unemployed
Unemployed ~~ 0*Unemployed
JSat ~ IC
JAvoid ~ JSat
WC ~ JAvoid + JSat + IC
WEU ~ WC + JSat + UR
JSearch ~ WEU
CA ~ JSearch
Turnover ~ CA + WC + UR
IC ~ phantom1*phantom
UR ~ phantom2*phantom
JSat ~ phantom3*phantom
JAvoid ~ phantom4*phantom
WC ~ phantom5*phantom
WEU ~ phantom6*phantom
JSearch ~ phantom7*phantom
CA ~ phantom8*phantom
Turnover ~ phantom9*phantom
phantom =~ 0
phantom ~~ 1*phantom"
## -----------------------------------------------------------------------------
ptab = lavaanify(model = model, auto = TRUE, model.type="sem")
ptab[26:40,1:4]
## ---- message=FALSE, results="hide"-------------------------------------------
my.sa <- sa.aco(model = model, sens.model = sens.model, sample.cov = covmat,
sample.nobs = 410, opt.fun = 3, paths = 27:39,
seed = 1, k = 5, max.iter = 20)
## -----------------------------------------------------------------------------
my.sa.results = sens.tables(my.sa, path=TRUE) # get results
my.sa.results = lapply(my.sa.results, round, digits = 3) # round results (optional)
## -----------------------------------------------------------------------------
my.sa.results$sens.summary
## -----------------------------------------------------------------------------
my.sa.results$phan.paths
## -----------------------------------------------------------------------------
my.sa.results$phan.min
## -----------------------------------------------------------------------------
my.sa.results$phan.max
## -----------------------------------------------------------------------------
my.sa.results$p.paths
## ----message=F----------------------------------------------------------------
#Load the packages
require(SEMsens)
require(lavaan)
## -----------------------------------------------------------------------------
#Set a correlation matrix
lower = '
1.00
0.68 1.00
0.54 0.55 1.00
0.65 0.63 0.67 1.00
0.33 0.37 0.68 0.54 1.00
-0.01 0.00 0.03 -0.04 0.07 1.00'
#convert to full covariance matrix, using function from lavaan
full = getCov(lower, sds= c(4.61,5.37,7.25,3.44,8.91,8.80),
names = c("PU", "PEU", "SP", "CI","SOC","Gains"))
## -----------------------------------------------------------------------------
# Original model
lav_model <-  'SP~SOC
Gains~SP
PU~SP+PEU
PEU~SP
CI~SP+PU+PEU+SOC
Gains ~~ 0*CI
'
# Fit the original model with sem function
modelFit <-  sem(lav_model, sample.nobs=517, sample.cov=full, fixed.x=TRUE, std.lv=TRUE)
summary(modelFit, standardized = TRUE) #look at Std.all
fitMeasures(modelFit)
## -----------------------------------------------------------------------------
smith_original <- lavaan::lavaanify(model = lav_model, auto = TRUE, model.type = "sem", fixed.x = TRUE)
smith_original <- lavaan::lavaan(model = smith_original, sample.cov = full, sample.nobs = 517)
smith_original_par <- lavaan::standardizedSolution(smith_original, type = "std.all")
smith_original_par #4th row and 7th column of table : smith_original_par[1:4,1:7]
# Sensitivity model, with sensitivity parameters for all variables
sens_model <-  'SP~SOC
Gains ~ SP
PU ~ SP+PEU
PEU ~ SP
CI ~ SP+PU+PEU+SOC
Gains ~~ 0*CI
SP ~ phantom1*phantom
Gains ~ phantom2*phantom
PU ~ phantom3*phantom
PEU ~ phantom4*phantom
CI ~ phantom5*phantom
SOC ~ phantom6*phantom
phantom =~ 0  #mean of zero
phantom ~~ 1*phantom  # variance of one'
## -----------------------------------------------------------------------------
smith_example <- sa.aco(
sample.cov = full,
sample.nobs = 517,
model = lav_model,
sens.model = sens_model,
opt.fun = 1,
paths = c(1:9),
max.iter = 20,
k = 5)
## -----------------------------------------------------------------------------
smith_tables <- sens.tables(smith_example)
smith_tables$sens.summary
## -----------------------------------------------------------------------------
smith_tables$phan.paths
## -----------------------------------------------------------------------------
smith_tables$phan.min
## -----------------------------------------------------------------------------
smith_tables$phan.max
## -----------------------------------------------------------------------------
smith_tables$p.paths
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
getwd()
devtools::document() # apply anything change in the document to the package
getwd()
setwd("D:\Dropbox\1 UF Projects\Sensitivity Analysis for SEM\SEMsens")
setwd("D:\\Dropbox\\1 UF Projects\\Sensitivity Analysis for SEM\\SEMsens")
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
library(SEMsens)
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
setwd("D:\\Dropbox\\1 UF Projects\\Sensitivity Analysis for SEM\\SEMsens")
getwd()
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
# Load lavaan and SEMsens packages
require(lavaan)
require(SEMsens)
# Correlation matrix from published data
cormat <- diag(1,29) # start with the diagonal
cormat[lower.tri(cormat)] <- c( # add lower triangle data
.46,.22,.30,-.20,-.30,-.20,-.22,-.33,-.19,-.25,-.63,-.60,-.48,-.17,-.42,-.09,-.36,.09,
.04,-.12,0,-.20,-.20,-.43,-.33,-.49,-.18,-.03,.21,.30,-.15,-.25,-.10,-.20,-.31,-.15,
-.24,-.40,-.37,-.32,-.08,-.24,-.02,-.27,.06,.07,-.08,0,-.10,-.16,-.25,-.18,-.35,-.06,
-.05,.04,-.05,-.09,-.12,-.10,-.01,.03,.02,-.18,-.14,-.09,-.02,-.12,-.05,-.08,.03,.07,
-.08,-.06,-.10,-.07,-.10,-.03,-.11,.04,.03,-.07,-.24,0,-.12,-.50,-.32,-.45,-.38,-.29,
-.31,-.16,-.24,-.16,-.37,.12,.05,-.28,-.13,-.06,-.03,-.16,-.12,-.23,-.08,.06,.29,.31,
.10,.08,-.02,.07,.21,.24,.25,.06,.09,.04,.14,-.02,-.01,.10,.04,.04,.13,.19,.03,.18,
.14,-.04,.38,.41,.23,.13,.22,.36,.35,.35,.09,.14,.11,.14,-.09,-.04,.11,.04,.11,.15,
.30,.17,.33,.12,-.02,.31,.05,.03,.15,.22,.20,.21,-.05,.10,-.05,.03,-.04,-.06,.03,.05,
.03,.07,.24,.19,.23,.13,-.08,.17,.15,.19,.28,.23,.23,.04,.18,.08,.10,-.09,-.06,.07,
.01,.11,.08,.21,.20,.28,.06,-.03,.43,.56,.35,.32,.26,.16,.27,.13,.45,-.04,-.04,.16,
.07,.14,.15,.23,.12,.29,.09,-.07,.67,.24,.26,.27,.15,.21,.13,.25,-.10,-.02,.12,0,.12,
.10,.18,.21,.27,.17,-.06,.36,.32,.31,.11,.29,.16,.40,-.10,-.05,.22,.10,.17,.15,.27,
.23,.33,.17,-.08,.78,.77,.11,.49,.09,.40,-.23,-.14,.19,-.07,.29,.27,.57,.40,.68,.27,0,
.82,.10,.57,.08,.42,-.29,-.10,.13,-.12,.33,.31,.66,.46,.75,.32,.02,.10,.49,.08,.38,
-.31,-.11,.18,-.06,.33,.34,.54,.38,.67,.31,-.08,.14,.52,.20,.22,.31,.42,.39,.01,.01,
.07,.06,.13,-.03,.06,.14,.42,-.29,-.12,.24,-.06,.25,.25,.38,.28,.48,.18,-.01,.16,.16,
.28,.68,.48,.06,.10,.01,.12,.15,-.05,.04,.02,.03,.24,.11,.14,.16,.31,.22,.32,.09,-.01,
.37,.12,.18,-.20,-.15,-.22,-.08,-.23,-.11,.07,.13,.18,-.07,0,-.10,.04,-.06,-.03,.15,
.54,.11,.12,.07,.10,.16,-.01,-.02,-.06,-.01,-.09,-.05,-.10,-.14,.06,.57,.28,.17,.36,
.27,-.05,.32,.21,.36,.18,.05,.42,.68,.26,-.05,.55,.23,.04,.28,-.03,-.07
)
cormat[upper.tri(cormat)] <- t(cormat)[upper.tri(cormat)] # mirror lower to upper
# Standard deviations from published data
sds <- diag(c(1,.38,.73,.65,.58,.78,.75,.55,.59,.54,.45,.74,.85,.80,.57,
.74,.69,.42,.57,.63,.62,.70,1.01,.94,.65,.37,.73,.40,1))
# Create covariance matrix covmat with row and column names
covmat <- sds %*% cormat %*% sds
rownames(covmat) <- colnames(covmat) <- c(
"FACES","Duty","Team","Hours","Absent","Effort","Sick","Quality","Family",
"Community","Personal","Thoughts","SI","QI","Stress","Jobs","Costs",
"Benefits","Joblessness","Moving","Impact","Interference","V1","V2",
"Prepare","Look","Intensity","Resign","Unemployed"
)
# Original model from Hom and Kinicki (2001)
model <- "JSat =~ FACES + Duty + Team
IC =~ Family + Personal + Community
JAvoid =~ Quality + Absent + Effort + Sick
WC =~ QI + Thoughts + SI
WEU =~ Stress + Benefits + Impact + Jobs
JSearch =~ Prepare + Look + Intensity
CA =~ V1 + V2
Turnover =~ Resign
Resign ~~ 0*Resign
UR =~ Unemployed
Unemployed ~~ 0*Unemployed
JSat ~ IC
JAvoid ~ JSat
WC ~ JAvoid + JSat + IC
WEU ~ WC + JSat + UR
JSearch ~ WEU
CA ~ JSearch
Turnover ~ CA + WC + UR"
# Sensitivity model
sens.model <- "JSat =~ FACES + Duty + Team
IC =~ Family + Personal + Community
JAvoid =~ Quality + Absent + Effort + Sick
WC =~ QI + Thoughts + SI
WEU =~ Stress + Benefits + Impact + Jobs
JSearch =~ Prepare + Look + Intensity
CA =~ V1 + V2
Turnover =~ Resign
Resign ~~ 0*Resign
UR =~ Unemployed
Unemployed ~~ 0*Unemployed
JSat ~ IC
JAvoid ~ JSat
WC ~ JAvoid + JSat + IC
WEU ~ WC + JSat + UR
JSearch ~ WEU
CA ~ JSearch
Turnover ~ CA + WC + UR
IC ~ phantom1*phantom
UR ~ phantom2*phantom
JSat ~ phantom3*phantom
JAvoid ~ phantom4*phantom
WC ~ phantom5*phantom
WEU ~ phantom6*phantom
JSearch ~ phantom7*phantom
CA ~ phantom8*phantom
Turnover ~ phantom9*phantom
phantom =~ 0
phantom ~~ 1*phantom"
ptab = lavaanify(model = model, auto = TRUE, model.type="sem")
ptab[26:40,1:4]
my.sa <- sa.aco(model = model, sens.model = sens.model, sample.cov = covmat,
sample.nobs = 410, opt.fun = 3, paths = 27:39,
seed = 1, k = 5, max.iter = 20)
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
setwd("D:\\Dropbox\\1 UF Projects\\Sensitivity Analysis for SEM\\SEMsens")
getwd()
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
setwd("D:\\Dropbox\\1 UF Projects\\Sensitivity Analysis for SEM\\SEMsens")
getwd()
devtools::document() # apply anything change in the document to the package
# SET Ghostscript environment
Sys.setenv(R_GSCMD = "C:\\Program Files\\gs\\gs9.53.3\\bin\\gswin64c.exe")
check() # check the package
library(SEMsens)
#########################################################
#install.packages("spelling")
devtools::spell_check() # spell check
#install.packages("rhub")
devtools::check_rhub() # rhub check
devtools::check_win_devel() # check on win-builder (with `check_win_devel()`)?
# install.packages("rmarkdown")
library(devtools)
library(roxygen2)
setwd("D:\\Dropbox\\1 UF Projects\\Sensitivity Analysis for SEM\\SEMsens")
getwd()
devtools::document() # apply anything change in the document to the package
devtools::release()
n.of.sens.pars = 5
d <- list(rep(c(-1, 1), n.of.sens.pars))
d
knitr::opts_chunk$set(echo = TRUE)
library(lavaan)
Domain <- list(x1 = seq(-1, 1, by=.01),
x2 = seq(-1, 1, by=.01),
x3 = seq(-1, 1, by=.01),
x4 = seq(-1, 1, by=.01),
x5 = seq(-1, 1, by=.01))
Domain
d <- list(rep(seq(-1, 1, by=.01), n.of.sens.pars))
d
str(Domain)
d <- rep(list(seq(-1, 1, by=.01), n.of.sens.pars))
d
d <- rep(list(seq(-1, 1, by=.01)), n.of.sens.pars)
d
Neighbour <- function(x) {
change.what <- sample.int(length(d), 1)
x[change.what] <- sample(d[[change.what]], 1)
return(x)
}
d
Neighbour(c(1,2,3,4,5))
change.what <- sample.int(length(d), 1)
change.what
x[change.what]
x = c(.5, .3, .1 , .2, -.3)
Neighbour <- function(x) {
change.what <- sample.int(length(d), 1)
x[change.what] <- sample(d[[change.what]], 1)
return(x)
}
Neighbour(x)
Neighbour(x)
Neighbour(x)
for (i in 1:10) {
s_prop<- list()
f_prop<- list()
s_prop[[1]]<- c(sample(Domain[[1]],1),sample(Domain[[2]],1),sample(Domain[[3]],1),
sample(Domain[[4]],1),sample(Domain[[5]],1))
f_prop[[1]] <- OBJECTIVEfunction(s_prop[[1]])
L<-2
while (is.na(f_prop[[L-1]])== T ) {
s_prop[[L]]<- c(sample(Domain[[1]],1),sample(Domain[[2]],1),sample(Domain[[3]],1),
sample(Domain[[4]],1),sample(Domain[[5]],1))
f_prop[[L]] <-OBJECTIVEfunction(s_prop[[L]])
L<- L+1
}
s0[[i]] <-   s_prop[[L-1]]
F0[[i]] <-   f_prop[[L-1]]
}
d
n.of.sens.pars
s_prop<- list()
for (j in 1:n.of.sens.pars){
s_prop[[1]] <- sample(d[[j]], 1)
}
s_prop
for (j in 1:n.of.sens.pars){
s_prop[[j]] <- sample(d[[j]], 1)
}
s_prop
s_prop<- list()
for (j in 1:n.of.sens.pars){
s_prop[[j]] <- sample(d[[j]], 1)
}
s_prop
sens.par <- NULL
for (j in 1:n.of.sens.pars){
sens.par  <- c(sens.par, sample(d[[j]], 1))
}
sens.par
s_prop<- list()
f_prop<- list()
sens.par <- NULL
for (j in 1:n.of.sens.pars){
sens.par  <- c(sens.par, sample(d[[j]], 1))
s_prop[[j]] <-sens.par
}
s_prop
